h3. j.tools.text
 `Source <https://github.com/Jumpscale/jumpscale_core/tree/master/lib/JumpScale/core/system/text.py>`_  

h4. addCmd

* params: out,entity,cmd
* path:/core/system/text.py (line:82)

h4. addTimeHR

* params: line,epoch,start
* path:/core/system/text.py (line:87)

h4. addVal

* params: out,name,val,addtimehr
* path:/core/system/text.py (line:96)

h4. ask

* params: content
* path:/core/system/text.py (line:118)

look for @ASK statements in text, where found replace with input from user

syntax for ask is:
    @ASK name:aname type:str descr:adescr default:adefault regex:aregex retry:10 minValue:10 maxValue:20 dropdownvals:1,2,3

    descr, default & regex can be between '' if spaces inside

    types are: str,float,int,bool,dropdown

    retry means will keep on retrying x times until ask is done properly

    dropdownvals is comma separated list of values to ask for when type dropdown

@ASK can be at any position in the text

h4. dealWithQuote

* params: text
* path:/core/system/text.py (line:544)

look for 'something,else' the comma needs to be converted to \k

h4. eval

* params: code
* path:/core/system/text.py (line:334)

look for {{}} in code and evaluate as python result is converted back to str

h4. getBool

* params: text
* path:/core/system/text.py (line:529)

h4. getDict

* params: text,ttype,deserialize
* path:/core/system/text.py (line:580)

keys are always treated as string
@type can be int,bool or float (otherwise its always str)

h4. getFloat

* params: text
* path:/core/system/text.py (line:513)

h4. getInt

* params: text
* path:/core/system/text.py (line:497)

h4. getList

* params: text,ttype,deserialize
* path:/core/system/text.py (line:554)

@type can be int,bool or float (otherwise its always str)

h4. getMacroCandidates

* params: txt
* path:/core/system/text.py (line:241)

look for {{}} return as list

h4. hrd2machinetext

* params: value
* path:/core/system/text.py (line:420)

       'something ' removes ''
       all spaces & commas & : inside ' '  are converted
        SPACE -> \S
        " -> \Q
        , -> \K
        : -> \D
        
-> \N
       

h4. isNumeric

* params: txt
* path:/core/system/text.py (line:114)

h4. machinetext2hrd

* params: value,quote
* path:/core/system/text.py (line:448)

       do reverse of:
            SPACE -> \S
            " -> \Q
            , -> \K
            : -> \D
            
-> \N
       

h4. machinetext2str

* params: value
* path:/core/system/text.py (line:479)

       do reverse of:
            SPACE -> \S
            " -> \Q
            , -> \K
            : -> \D
            
-> \N
       

h4. prefix

* params: prefix,txt
* path:/core/system/text.py (line:43)

h4. prefix_remove

* params: prefix,txt,onlyPrefix
* path:/core/system/text.py (line:51)

@param onlyPrefix if True means only when prefix found will be returned, rest discarded

h4. prefix_remove_withtrailing

* params: prefix,txt,onlyPrefix
* path:/core/system/text.py (line:66)

there can be chars for prefix (e.g. '< :*: aline'  and this function looking for :*: would still work and ignore '< ')
@param onlyPrefix if True means only when prefix found will be returned, rest discarded

h4. pythonObjToStr

* params: text,multiline
* path:/core/system/text.py (line:370)

try to convert a python object to string representation works for None, bool, integer, float, dict, list

h4. pythonObjToStr1line

* params: text,quote
* path:/core/system/text.py (line:354)

h4. replaceQuotes

* params: value,replacewith
* path:/core/system/text.py (line:442)

h4. str2var

* params: string
* path:/core/system/text.py (line:282)

convert list, dict of strings 
or convert 1 string to python objects

h4. strToPythonObj

* params: str
* path:/core/system/text.py (line:350)

h4. toAscii

* params: value,maxlen
* path:/core/system/text.py (line:21)

h4. toStr

* params: value,codec
* path:/core/system/text.py (line:12)

h4. toUnicode

* params: value,codec
* path:/core/system/text.py (line:34)

